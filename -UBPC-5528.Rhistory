z1a <- weibull_survival_nls_rss(par + c(eps, 0), x)
z1b <- weibull_survival_nls_rss(par + c(0, eps), x)
(c(z1a, z1b) - z0)/eps
weibull_survival_nls_rss_jacobian(par, x)
par <- c(3, 5)
par <- c(3, 5)
x <- rweibull(100, par[1], par[2])
eps <- 1e-6
z0 <- weibull_survival_nls_rss(par, x)
z1a <- weibull_survival_nls_rss(par + c(eps, 0), x)
z1b <- weibull_survival_nls_rss(par + c(0, eps), x)
(c(z1a, z1b) - z0)/eps
weibull_survival_nls_rss_jacobian(par, x)
x <- sort(rweibull(100, par[1], par[2]))
eps <- 1e-6
z0 <- weibull_survival_nls_rss(par, x)
z1a <- weibull_survival_nls_rss(par + c(eps, 0), x)
z1b <- weibull_survival_nls_rss(par + c(0, eps), x)
(c(z1a, z1b) - z0)/eps
weibull_survival_nls_rss_jacobian(par, x)
#' # create prediction lines
#' xp <- seq(min(x), max(x), l = 101)
#' yp <- 1 - pweibull(xp, ft$shape, ft$scale)
#' yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
#'
#' # plot
#' plot(x, y)
#' lines(xp, yp, col = "red")
#' lines(xp, yp2, col = "blue")
#'
weibull_survival_nls_fit <- function(x) {
# remove NA and sort
x <- sort(x[!is.na(x)])
# y-positions
y <- seq(1 - 1/(2*length(x)), 1/(2*length(x)), l = length(x))
# optimise R^2
sol <- optim(
weibull_survival_nls_initialguess(x),
weibull_survival_nls_rss,
gr = weibull_survival_nls_rss_jacobian,
x = x, y = y,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(Inf, Inf)
)
# calculate likelihood
logp <- log(sol$par[1]) - sol$par[1]*log(sol$par[2]) + (sol$par[1] - 1)*log(x) - (x/sol$par[2])^sol$par[1]
loglikelihood <- sum(logp)
# return
data.frame(
loglikelihood = loglikelihood,
shape = sol$par[1],
scale = sol$par[2],
rss = sol$value
)
}
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
xp <- seq(0.5*min(x), 1.2*max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
devtools::load_all()
x <- sort(stats::rweibull(25, 4, 6))
ft <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp <- 1 - pweibull(xp, ft$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp, col = "red")
lines(xp, yp2, col = "blue")
ft
ft2
# generate data and fit
x <- sort(stats::rweibull(25, 4, 6))
ft1 <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp1 <- 1 - pweibull(xp, ft1$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp1, col = "red")
lines(xp, yp2, col = "blue")
x
# remove NA and sort
x <- sort(x[!is.na(x)])
# y-positions
y <- seq(1 - 1/(2*length(x)), 1/(2*length(x)), l = length(x))
# optimise R^2
sol <- optim(
weibull_survival_nls_initialguess(x),
weibull_survival_nls_rss,
gr = weibull_survival_nls_rss_jacobian,
x = x, y = y,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(Inf, Inf)
)
sol
sol$par
weibull_survival_nls_initialguess(x)
seq(1 - 1/(2*length(x)), 1/(2*length(x)), l = length(x))
# optimise R^2
sol <- optim(
c(4, 6), #weibull_survival_nls_initialguess(x),
weibull_survival_nls_rss,
gr = weibull_survival_nls_rss_jacobian,
x = x, y = y,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(Inf, Inf)
)
sol$par
# optimise R^2
sol <- optim(
weibull_survival_nls_initialguess(x),
weibull_survival_nls_rss,
gr = weibull_survival_nls_rss_jacobian,
x = x, y = y,
method = "L-BFGS-B",
lower = c(0, 0),
upper = c(Inf, Inf)
)
sol$par
weibull_survival_nls_rss(c(4, 6), x)
weibull_survival_nls_rss(sol$par x)
weibull_survival_nls_rss(sol$par, x)
x
x <- c(2.416207, 3.111538, 3.494730, 3.649034, 3.771542, 3.786514, 3.937339, 4.109566, 4.155950, 4.455778, 5.061564, 5.713227, 5.722399, 5.748901, 5.773504, 6.118116, 6.180645, 6.231958, 6.245591, 6.700290, 6.708298, 6.888877, 7.168711, 7.281325, 8.124337)
library("tidyverse")
df <- expand_grid(k = seq(3, 5, l = 101), l = seq(5, 7, l = 101))
df
apply(df, 1, function(par), weibull_survival_nls_rss(par, x))
df$rss <- apply(df, 1, function(par) weibull_survival_nls_rss(par, x))
df
ggplot(df, aes(x = k, y = l, fill = rss)) +
geom_tile()
ggplot(df, aes(x = k, y = l, fill = rss, z = rss)) +
geom_tile() +
geom_contour()
x <- c(2.416207, 3.111538, 3.494730, 3.649034, 3.771542, 3.786514, 3.937339, 4.109566, 4.155950, 4.455778, 5.061564, 5.713227, 5.722399, 5.748901, 5.773504, 6.118116, 6.180645, 6.231958, 6.245591, 6.700290, 6.708298, 6.888877, 7.168711, 7.281325, 8.124337)
library("tidyverse")
df <- expand_grid(k = seq(3, 5, l = 101), l = seq(5, 7, l = 101))
df$rss <- apply(df, 1, function(par) weibull_survival_nls_rss(par, x))
ggplot(df, aes(x = k, y = l, fill = rss, z = rss)) +
geom_tile() +
geom_contour()
ggplot(df, aes(x = k, y = l, z = rss)) +
geom_tile(aes(fill = rss)) +
geom_contour()
df <- expand_grid(k = seq(2, 5, l = 101), l = seq(5, 7, l = 101))
df$rss <- apply(df, 1, function(par) weibull_survival_nls_rss(par, x))
ggplot(df, aes(x = k, y = l, z = rss)) +
geom_tile(aes(fill = rss)) +
geom_contour()
?geom_contour
ggplot(df, aes(x = k, y = l, z = rss)) +
geom_tile(aes(fill = rss)) +
geom_contour(bins = 20)
ggplot(df, aes(x = k, y = l, z = rss)) +
geom_tile(aes(fill = rss)) +
geom_contour(bins = 40)
df <- expand_grid(k = seq(3, 4.5, l = 101), l = seq(5.5, 6.5, l = 101))
df$rss <- apply(df, 1, function(par) weibull_survival_nls_rss(par, x))
ggplot(df, aes(x = k, y = l, z = rss)) +
geom_tile(aes(fill = rss)) +
geom_contour(bins = 40)
ft1 <- weibull_survival_nls_fit(x)
# experimental data
n <- length(x)
y <- seq(1 - 1/(2*n), 1/(2*n), l = n)
# likelihood fit
ft2 <- weibull_fit(x)
# create prediction lines
xp <- seq(min(x), max(x), l = 101)
yp1 <- 1 - pweibull(xp, ft1$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp1, col = "red")
lines(xp, yp2, col = "blue")
ft1$scale*gamma(1 + 1/ft1$shape)
ft2$scale*gamma(1 + 1/ft2$shape)
mean(x)
xp <- seq(min(x), max(x), l = 101)
yp1 <- 1 - pweibull(xp, ft1$shape, ft$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp1, col = "red")
lines(xp, yp2, col = "blue")
ft1
ft2
xp <- seq(min(x), max(x), l = 101)
yp1 <- 1 - pweibull(xp, ft1$shape, ft1$scale)
yp2 <- 1 - pweibull(xp, ft2$shape, ft2$scale)
# plot
plot(x, y)
lines(xp, yp1, col = "red")
lines(xp, yp2, col = "blue")
ft1
ft2
devtools::document()
devtools::install()
