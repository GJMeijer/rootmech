% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rootclasscount.R
\name{rootclass_multipliers_jacobian}
\alias{rootclass_multipliers_jacobian}
\title{Derivative of function `rootclass_multipliers()`}
\usage{
rootclass_multipliers_jacobian(xb, b)
}
\arguments{
\item{xb}{vector with x-breakpoints (length = number of segments + 1)}

\item{b}{vector with power law coefficients for each segment}
}
\value{
a list containing the derivatives for each input parameter. Has
  fields `xb` and `b`.
}
\description{
Generates the derivative of the results of the function
`rootclass_multipliers()` with respect to its input parameters `xb` and `b`.

Function is vectorised.
}
\examples{
xb <- seq(1.5, 7.5, l = 4)
b <- seq(-2.5, 2, l = length(xb) - 1)
a <- rootclass_multipliers(xb, b)
J <- rootclass_multipliers_jacobian(xb, b)

Jxb <- matrix(0, length(a), length(xb))
eps <- 1e-4
for (i in 1:length(xb)) {
  dx <- rep(0, length(xb))
  dx[i] <- eps
  a2 <- rootclass_multipliers(xb + dx, b)
  Jxb[, i] <- (a2 - a)/eps
}

Jb <- matrix(0, length(a), length(b))
eps <- 1e-4
for (i in 1:length(b)) {
  dx <- rep(0, length(b))
  dx[i] <- eps
  a2 <- rootclass_multipliers(xb, b + dx)
  Jb[, i] <- (a2 - a)/eps
}

J
Jxb
Jb

}
