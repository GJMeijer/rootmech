% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gumbel.R
\name{gumbel_loglikelihood}
\alias{gumbel_loglikelihood}
\title{Calculate Gumbel loglikelihood}
\usage{
gumbel_loglikelihood(par, x, weights = rep(1, length(x)), deriv = 0)
}
\arguments{
\item{par}{vector with fitting parameters (location and scale parameter)}

\item{x}{array with observations}

\item{weights}{weighting factor for each observation in \code{x}}

\item{deriv}{order of partial derivative requested}
}
\value{
loglikelihood, or its partial derivatives to order `deriv`
}
\description{
Calculate the weighted loglikelihood for a gumbel fit.
Can also be used to calculate the first or second partial
derivative with respect to fitting parameters.
}
\examples{
# generate some data
mu <- 20
theta <- 2
x <- rgumbel(20, mu, theta)
w <- stats::runif(length(x), 0.9, 1.1)

# check loglikelihood
par <- c(mu, theta)
gumbel_loglikelihood(par, x, weights = w)
sum(w*dgumbel(x, mu, theta, log = TRUE))

# test first derivative
eps <- 1e-6
f0 <- gumbel_loglikelihood(par, x, weights = w, deriv = 0)
f1 <- gumbel_loglikelihood(par + c(eps, 0), x, weights = w, deriv = 0)
f2 <- gumbel_loglikelihood(par + c(0, eps), x, weights = w, deriv = 0)
(c(f1, f2) - f0)/eps
gumbel_loglikelihood(par, x, weights = w, deriv = 1)

#' # test second derivative
f0 <- gumbel_loglikelihood(par, x, weights = w, deriv = 1)
f1 <- gumbel_loglikelihood(par + c(eps, 0), x, weights = w, deriv = 1)
f2 <- gumbel_loglikelihood(par + c(0, eps), x, weights = w, deriv = 1)
(cbind(f1, f2) - f0)/eps
gumbel_loglikelihood(par, x, weights = w, deriv = 2)

}
