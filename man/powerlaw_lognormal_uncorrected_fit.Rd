% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerlaw_lognormal_uncorrected.R
\name{powerlaw_lognormal_uncorrected_fit}
\alias{powerlaw_lognormal_uncorrected_fit}
\title{Fit power-law assuming lognormally distributed residuals (uncorrected)}
\usage{
powerlaw_lognormal_uncorrected_fit(x, y, weights = rep(1, length(x)))
}
\arguments{
\item{x}{measured x-values (e.g. root diameters). These values are assumed
to be already normalised by a reference value to ensure a dimensionless
parameter.}

\item{y}{measured y-values (e.g. root tensile strength)}

\item{weights}{vector with weighting for each observation (default: 1)}
}
\value{
a list containing the fields
\itemize{
\item \code{loglikelihood}: the log-likelihood score of the fit
\item \code{multiplier}: fitted power-law multiplier
\item \code{sdlog}: log-standard deviation
}
}
\description{
Solve power-law fit with log-normally distributed residuals to a series
of (x, y) data, using the loglikelihood method.

The power-law is described by:

y0*x^beta

where y0 is the power law multiplier and beta the power law exponent.

The lognormal distribution is characterised by log-mean parameter muL and
log-standard deviation sdlog.

It is assumed that at each value of x

exp(muL) = y0*x^beta

And therefore muL can be described as:

muL = log(y0) + beta*log(x)

This means that muL does not accurately reflect the mean of y at each
value of x, and hence the results of this function are referred to as
"uncorrected". For the corrected version, in which muL accurately describes
the mean of y, see function \code{powerlaw_lognormal_fit()}.
}
\examples{
# generate data
y0 <- 20
beta <- -0.5
sdlog <- 0.3
muL <- log(y0)
x <- seq(1, 8, l = 1001)
y <- x^beta*rlnorm(length(x), muL, sdlog)

# fit
ft <- powerlaw_lognormal_uncorrected_fit(x, y)
ft
xp <- seq(min(x), max(x), l = 101)
yp <- ft$multiplier*xp^ft$exponent

# plot
plot(x, y)
lines(xp, yp, col = "red")

}
