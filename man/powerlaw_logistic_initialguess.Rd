% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerlaw_logistic.R
\name{powerlaw_logistic_initialguess}
\alias{powerlaw_logistic_initialguess}
\title{Generate initial guess for fitting in `powerlaw_logistic_fit()`}
\usage{
powerlaw_logistic_initialguess(
  x,
  y,
  weights = rep(1, length(x)),
  method = "bisection",
  range = c(-1, 1)
)
}
\arguments{
\item{x}{measured x-values (e.g. root diameters). These values are assumed
to be already normalised by a reference value to ensure a dimensionless
parameter.}

\item{y}{measured y-values (e.g. root tensile strength)}

\item{weights}{vector with weighting for each observation (default: 1)}

\item{method}{solving method. Can be \code{newton} for gradient-descent (using
\code{rootSolve::multiroot()}), \code{bisection} for a bisection algorithm
(using \code{stats::uniroot()}) or \code{chull} for a method involving convex
hulls (using, \code{grDevices::chull()}, only available for
\code{model == "uniform"})). Not all methods are available for each model,
see individual documentation for fitting functions for each model}

\item{range}{initial search range around best guess, when using a
bisection algorithm (\verb{method == "bisection}). \code{range} is added to the
best guess to provide the bounds of the initial search window}
}
\value{
vector with initial guess for power-law multiplier, power-law
  exponent, and logistic shape parameter (at x = 1).
}
\description{
Generate an initial guess for logistic fitting parameter (power-law
multiplier, power-law exponent, and logistic shape parameter (at x = 1).

The power-law function describing the mean is estimated using a power-law
regression with normally distributed standard deviations that scale with
the mean.

The scale parameter is then estimated from the standard deviation using
the method of moments, i.e. scale = sd*sqrt(3)/pi
}
