% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rootclasscount.R
\name{rootclass_initialguess}
\alias{rootclass_initialguess}
\title{Initial guess for `rootclass_fit()` function}
\usage{
rootclass_initialguess(
  xmin,
  xmax,
  y,
  ns,
  n0 = 0,
  fixed = rep(NA, 2 * ns + 1),
  frac = 0.25,
  weights_multiplier = rep(1, length(xmin)),
  weights_power = rep(0, length(xmin))
)
}
\arguments{
\item{xmin, xmax}{vectors with lower and upper limits for each root diameter
class. `xmax > xmin >= TRUE` for each element.}

\item{y}{vector with number of roots (or total root length) per class}

\item{ns}{number of power-law segments to use in fit}

\item{n0}{number of extra optional segments breakpoint positions to include
in generating an initial guess}

\item{fixed}{vector with `2*ns + 1` elements, with values of the
fitting parameter (`ns + 1` breakpoints, `ns` power-law coefficients)
that should be fixed and therefore not fitted. Values that are `NA` will
be fitted while any non-NA will be held constant}

\item{frac}{parameter for estimating outer breakpoints, if not fixed. The
breakpoint is estimated as the smallest value of x-values that are at
`frac` normalised position (0 to 1) within their class. For the last
breakpoint position, this is the position `1 - frac`.}

\item{weights_multiplier}{vector with fitting multiplication weights for
each class}

\item{weights_power}{vector with fitting power-law coefficients for each
class}
}
\value{
vector with initial guess
}
\description{
Generate a simple initial guess for the `rootclass_fit()` function.

Breakpoints are distributed evenly across the domain determined by the
midpoints of the smallest and largest root class. Power-law power
coefficients are simply taken as 0
}
\examples{
no <- 9
xc <- seq(2, 7, l = no + 1)
xmin <- xc[1:no]
xmax <- xc[2:(no + 1)]
y <- (8 - (0.5*(xmin + xmax) - 5)^2)
ns <- 2
rootclass_initialguess(xmin, xmax, y, ns)

}
