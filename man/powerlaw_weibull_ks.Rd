% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerlaw_weibull.R
\name{powerlaw_weibull_ks}
\alias{powerlaw_weibull_ks}
\title{Calculate Kolmogorov-Smirnov parameters for power-law fit + weibull}
\usage{
powerlaw_weibull_ks(x, y, multiplier, exponent, shape, n = 101)
}
\arguments{
\item{x}{measured x-values (e.g. root diameters). These values are assumed
to be already normalised by a reference value to ensure a dimensionless
parameter.}

\item{y}{measured y-values (e.g. root tensile strength)}

\item{multiplier, exponent}{multiplier and exponent for power-law fit
describing the mean}

\item{shape}{weibull shape parameter}

\item{n}{number of points to use to plot fitted cumulative curve}
}
\value{
list with fields
\itemize{
\item \code{ks_distance}: Kolmogorov-Smirnov distance
\item \code{experimental}: dataframe (\code{x}, \code{y}) with cumulative experimental data
\item \code{fit}: dataframe (\code{x}, \code{y}) with cumulative fitted trace
\item \code{difference}: dataframe (\code{x}, \code{y}) for line showing location of
maximum KS distance
}
}
\description{
Calculate Kolmogorov-Smirnov parameter for power-law fit with weibull
distributed residuals
}
\examples{
#' generate some data
y0 <- 20
beta <- -0.5
kappa <- 10
lambda <- 1/gamma(1 + 1/kappa)
x <- seq(1, 8, l = 101)
y <- y0*x^beta*rweibull(length(x), kappa, lambda)
weights <- runif(length(x), 0.8, 1.2)

# fit
ft <- powerlaw_weibull_fit(x, y, weights = weights)

powerlaw_weibull_ks(x, y, ft$multiplier, ft$exponent, ft$shape)

}
