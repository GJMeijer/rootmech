% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerlaw_gumbel.R
\name{powerlaw_gumbel_fit}
\alias{powerlaw_gumbel_fit}
\title{Fit power-law assuming Gumbel distributed residuals}
\usage{
powerlaw_gumbel_fit(
  x,
  y,
  weights = rep(1, length(x)),
  start = NULL,
  gamma = 0.577215664901533,
  method = "bisection",
  range = c(-1, 1),
  scale_min = 0.1
)
}
\arguments{
\item{x}{measured x-values (e.g. root diameters). These values are assumed
to be already normalised by a reference value to ensure a dimensionless
parameter.}

\item{y}{measured y-values (e.g. root tensile strength)}

\item{weights}{vector with weighting for each observation (default: 1)}

\item{start}{(optimal) initial guess for power-law exponent and gumbel shape
parameter. If not defined, an educated guess is made using the function
`powerlaw_gumbel_initialguess()`.}

\item{gamma}{Euler-Mascheroni constant}

\item{method}{solving method. Can be \code{newton} for gradient-descent (using
\code{rootSolve::multiroot()}), \code{bisection} for a bisection algorithm
(using \code{stats::uniroot()}) or \code{chull} for a method involving convex
hulls (using, \code{grDevices::chull()}, only available for
\code{model == "uniform"})). Not all methods are available for each model,
see individual documentation for fitting functions for each model}

\item{range}{initial search range around best guess, when using a
bisection algorithm (\verb{method == "bisection}). \code{range} is added to the
best guess to provide the bounds of the initial search window}

\item{scale_min}{minimum value for the scale parameters during making an
initial guess. Value is needed to ensure algorithm doesn't crash}
}
\value{
a list containing the fields
  * `loglikelihood`: the log-likelihood score of the fit
  * `multiplier`: fitted power-law multiplier
  * `exponent`: fitted power-law exponent
  * `scale`: fitted gumbel scale parameter, at x = 1
}
\description{
Fit a power-law regression to a series of (x, y) data using weighted
loglikelihood optimalisation.

The power law curve describes the mean of the gumbel distribution. The shape
parameter of the gumbel distribution is assumed to scale with the power-law
mean.
}
\examples{
# generate some data
y0 <- 20
beta <- -0.5
theta0 <- 5
gamma <- 0.57721566490153286060651209008240243104215933593992
x <- seq(1, 6, l = 51)
y <- y0*x^beta*rgumbel(
  length(x),
  1 - gamma*theta0/y0,
  theta0/y0
)

# fit
ft <- powerlaw_gumbel_fit(x, y)
ft
xp <- seq(min(x), max(x), l = 101)
yp <- ft$multiplier*xp^ft$exponent

# plot
plot(x, y)
lines(xp, yp, col = "red")

}
