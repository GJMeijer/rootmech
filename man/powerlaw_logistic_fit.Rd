% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerlaw_logistic.R
\name{powerlaw_logistic_fit}
\alias{powerlaw_logistic_fit}
\title{Fit power law + gamma using loglikelihood fitting}
\usage{
powerlaw_logistic_fit(
  x,
  y,
  weights = rep(1, length(x)),
  start = NULL,
  method = "bisection",
  range = c(-1, 1)
)
}
\arguments{
\item{x}{measured x-values (e.g. root diameters). These values are assumed
to be already normalised by a reference value to ensure a dimensionless
parameter.}

\item{y}{measured y-values (e.g. root tensile strength)}

\item{weights}{vector with weighting for each observation (default: 1)}

\item{start}{vector with (optimal) initial guess for power-law multiplier,
power-law exponent and logistic shape parameter (at x = 1).
If not defined, an educated guess is made using the function
\code{powerlaw_logistic_initialguess()}.}

\item{method}{solving method. Can be \code{newton} for gradient-descent (using
\code{rootSolve::multiroot()}), \code{bisection} for a bisection algorithm
(using \code{stats::uniroot()}) or \code{chull} for a method involving convex
hulls (using, \code{grDevices::chull()}, only available for
\code{model == "uniform"})). Not all methods are available for each model,
see individual documentation for fitting functions for each model}

\item{range}{initial search range around best guess, when using a
bisection algorithm (\verb{method == "bisection}). \code{range} is added to the
best guess to provide the bounds of the initial search window}
}
\value{
a list containing the fields
\itemize{
\item \code{loglikelihood}: the log-likelihood score of the fit
\item \code{multiplier}: fitted power-law multiplier
\item \code{exponent}: fitted power coefficient
\item \code{scale}: fitted logistic scale parameter, defined at x = 1
}
}
\description{
Fit a power law distribution plus a logistic gamma distribution to a series
of test data (x, y), using the log-likelihood method.

The mean logistic distribution is assumed to be equal
to the power-law describing the mean. The shape parameter is assumed
to scale with the mean. The magnitude of the shape is defined at x = 1.
}
\examples{
y0 <- 20
beta <- -0.5
s0 <- 4
x <- seq(1, 6, l = 101)
y <- abs(rlogis(length(x), y0*x^beta, s0*x^beta))
w <- runif(length(x), 0.8, 1.2)

ft <- powerlaw_logistic_fit(x, y, weights = w)
ft
xp <- seq(min(x), max(x), l = 101)
yp <- ft$multiplier*xp^ft$exponent

plot(x, y)
lines(xp, yp, col = "red")

}
