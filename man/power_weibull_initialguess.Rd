% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_weibull.R
\name{power_weibull_initialguess}
\alias{power_weibull_initialguess}
\title{Create initial guess for weibull probability power-law fit}
\usage{
power_weibull_initialguess(x, y)
}
\arguments{
\item{x, y}{arrays with measured values}
}
\value{
vector with three elements, see Description
}
\description{
Generate an initial guess for the power-law fit using weibull distributions
and loglikelihood fitting.

The function makes a crude guess for the initial guess used in the function
\code{power_weibull()}, which consists of three numbers:
\itemize{
\item \code{log(alpha/gamma(1 + 1/kappa)) = log(alpha) - log(gamma(1 + 1/kappa))}
\item \code{beta}
\item \code{log(kappa)}
}

where \code{alpha} and \code{beta} are the multiplier and power-law coefficient of
the best power-law fit, and \code{kappa} the shape parameter of the Weibull
distribution.
}
\examples{
# input data
nr <- 51
dr <- seq(1, 10, l = nr)
kappa <- 10000
alpha <- 10
beta <- -0.2
tru <- alpha*dr^beta * rweibull(nr, kappa, 1/gamma(1 + 1/kappa))

# initial guess
par <- power_weibull_initialguess(dr, tru)
# predict
xf <- seq(min(dr), max(dr), l = 251)
yf <- exp(par[1])*gamma(1 + 1/exp(par[3]))*xf^par[2]

# plot fit
plot(dr, tru)
lines(xf, yf, col = "red")

}
