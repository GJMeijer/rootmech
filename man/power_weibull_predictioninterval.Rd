% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/power_weibull.R
\name{power_weibull_predictioninterval}
\alias{power_weibull_predictioninterval}
\title{Generate prediction interval for log-transformed power-law fit}
\usage{
power_weibull_predictioninterval(
  xmin,
  xmax,
  multiplier,
  power,
  shape,
  scale = 1/gamma(1 + 1/shape),
  confidence = 0.95,
  n = 101
)
}
\arguments{
\item{xmin, xmax}{min and max values of the dependent variable. Confidence
interval is plotted between these values only}

\item{multiplier}{fitted power-law multiplier}

\item{power}{fitted power-law power coefficient}

\item{shape}{Weibull scale parameter}

\item{scale}{Weibull scale parameter}

\item{confidence}{confidence level for the prediction interval, centred
around the mean. For example `confidence = 0.95` plots a confidence
interval with two tails of 2.5\% on either side}

\item{n}{number of equally spaced points to use on x-interval}
}
\value{
dataframe with values for x (`x`), the mean value for y (`y`), and
  the lower and upper bounds of the confidence interval (`lower`, `upper`)
}
\description{
Generate a prediction interval with a certain amount of confidence it
contains a random new observation. Fit is generated by the function
`power_logtransform_fit()`.
}
\examples{
x <- seq(2, 10, l = 250)
y <- 10*x^-0.5 * rweibull(length(x), shape = 4, scale = 1/gamma(1 + 1/4))
ft <- power_weibull_fit(x, y)
df <- power_weibull_predictioninterval(
  min(x), max(x), ft$multiplier, ft$power, ft$shape)

plot(x, y, ylim = c(0, max(y)))
lines(df$x, df$mean, col = "red")
lines(df$x, df$lower, col = "blue")
lines(df$x, df$upper, col = "blue")

}
