% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/plot_ggplot.R
\name{copula_gaussian_plot}
\alias{copula_gaussian_plot}
\title{GGplot for copula fitting}
\usage{
copula_gaussian_plot(
  x,
  y,
  shape_x,
  shape_y,
  rho = 0,
  confidence = c(0.5, 0.95),
  annotations = NULL,
  xlab = expression(epsilon[r * "," * u]/epsilon[r * "," * u * "," * fit]),
  ylab = expression(t[r * "," * u]/t[r * "," * u * "," * fit]),
  xlim = c(NA, NA),
  ylim = c(NA, NA),
  ticks = 7,
  ellipsoid_axes = TRUE,
  ellipsoid_axes_linetype = c(1, 2),
  settings = plot_settings()
)
}
\arguments{
\item{x, y}{arrays with x and y-observations.}

\item{shape_x, shape_y}{Weibull shape parameters for parameters `x` and `y`}

\item{rho}{correlation coefficient for the Gaussian copula}

\item{confidence}{vector with prediction interval significance. For example
`confidence = c(0.5, 0.95)` will show the areas that contain 50% and 95%
of predicted measurements respectively.}

\item{annotations}{dataframe with labels to annotate, generated by function
`create_annotations()`}

\item{xlab, ylab}{x and y-axis labels}

\item{xlim, ylim}{two-element vectors with min and max values for the x and
y-axes. If axis limit can be freely chosen, specify the value of the min
and/or max as `NA`. The function will try to find nice axis limits for all
`NA` values using the function `round_range()`,}

\item{ticks}{maximum number of ticks on the axis. Used in function
`round_range()`}

\item{ellipsoid_axes}{if `TRUE`, plot the major and minor axis of the
Gaussian prediction ellipsoid}

\item{ellipsoid_axes_linetype}{array with linetypes for major and minor
axis of the prediction ellipsoid}

\item{settings}{list with default plot settings, as generated by the function
`plot_settings`}
}
\value{
ggplot object
}
\description{
Generate a plot, using ggplot, of the copula fit between root strain to
failure and root tensile strength, both normalised by the power-law fitted
predictions.

A Gaussian copula is used, and the marginal distributions are both
Weibull-distributed with known shape parameter and a mean of 1.

Prediction intervals can be generated.
}
\examples{
# input
shape_x <- 4
shape_y <- 6
rho <- -0.4

# create random data
df <- biomech_random(rep(1, 100), 1, 0, shape_x, 1, 0, shape_y, rho = rho)

# annotations
ann <- create_annotations(rho, prefix = "rho==", parse = TRUE)

# plot
copula_gaussian_plot(df$epsru, df$tru, shape_x, shape_y, rho = rho,
  annotations = ann)

}
