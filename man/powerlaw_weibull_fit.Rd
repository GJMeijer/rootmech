% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerlaw_weibull.R
\name{powerlaw_weibull_fit}
\alias{powerlaw_weibull_fit}
\title{Fit power-law assuming Weibull distributed residuals}
\usage{
powerlaw_weibull_fit(x, y, weights = rep(1, length(x)), start = NULL)
}
\arguments{
\item{x}{measured x-values (e.g. root diameters). These values are assumed
to be already normalised by a reference value to ensure a dimensionless
parameter.}

\item{y}{measured y-values (e.g. root tensile strength)}

\item{weights}{vector with weighting for each observation (default: 1)}

\item{start}{(optimal) initial guess for power-law exponent and weibull shape
parameter. If not defined, an educated guess is made using the function
`powerlaw_weibull_initialguess()`.}
}
\value{
a list containing the fields
  * `loglikelihood`: the log-likelihood score of the fit
  * `multiplier`: fitted power-law multiplier
  * `exponent`: fitted power-law exponent
  * `shape`: fitted weibull shape parameter
}
\description{
Fit a power-law regression to a series of (x, y) data using weighted
loglikelihood optimalisation.

The power law curve describes the mean of the weibull distribution. The shape
parameter of the Weibull distribution is constant with x
}
\examples{
#' generate some data
y0 <- 20
beta <- -0.5
kappa <- 10
lambda <- 1/gamma(1 + 1/kappa)
x <- seq(1, 8, l = 100001)
y <- y0*x^beta*rweibull(length(x), kappa, lambda)
weights <- runif(length(x), 0.8, 1.2)

# fit
ft <- powerlaw_weibull_fit(x, y, weights = weights)

# plot
xp <- seq(min(x), max(x), l = 101)
yp <- ft$multiplier*xp^ft$exponent
plot(x, y)
lines(xp, yp, col = "red")

}
