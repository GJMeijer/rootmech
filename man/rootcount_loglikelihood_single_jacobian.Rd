% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rootcount.R
\name{rootcount_loglikelihood_single_jacobian}
\alias{rootcount_loglikelihood_single_jacobian}
\title{Derivative of function `rootcount_loglikelihood_single()`}
\usage{
rootcount_loglikelihood_single_jacobian(
  par,
  x,
  xmin = min(x, na.rm = TRUE),
  xmax = max(x, na.rm = TRUE),
  weights = rep(1, length(x))
)
}
\arguments{
\item{par}{vector with fitting parameters. For n segments, the vector will
consist of n-1 consecutive x-breakpoints, followed by n power-law
cower coefficients}

\item{x}{vector with observations}

\item{xmin, xmax}{minimum and maximum values of `x` to use in the fit.
By default, `xmin = min(x)` and `xmax = max(x)` since this will maximise
the probability. These values may however be overwritten if required.}

\item{weights}{vector with weights for each observation. The individual
probabilities are raised to the power `weights`. By default, all
observations are weighted equally (`weights = 1`)}
}
\value{
a scalar containing the derivatives for each value in fitting vector
  `par`
}
\description{
Generates the derivative of the results of the function
`rootcount_loglikelihood_single()` with respect to fitting value input
`par`.

Function is vectorised.
}
\examples{
# Test jacobian by comparing to numberical solution
x <- seq(2.2, 6.5, l = 51)
par <- 2.2
w <- seq(0.8, 1.4, l = length(x))

J <- rootcount_loglikelihood_single_jacobian(par, x, weights = w)

eps <- 1e-6
J2 <- c(rootcount_loglikelihood_single(par + eps, x, weights = w) -
  rootcount_loglikelihood_single(par, x, weights = w))/eps

J
J2

}
