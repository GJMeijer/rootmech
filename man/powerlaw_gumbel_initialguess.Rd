% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/powerlaw_gumbel.R
\name{powerlaw_gumbel_initialguess}
\alias{powerlaw_gumbel_initialguess}
\title{Generate initial guess for `powerlaw_gumbel_fit()`}
\usage{
powerlaw_gumbel_initialguess(
  x,
  y,
  weights = rep(1, length(x)),
  method = "bisection",
  range = c(-1, 1),
  scale_min = 0.01
)
}
\arguments{
\item{x}{measured x-values (e.g. root diameters). These values are assumed
to be already normalised by a reference value to ensure a dimensionless
parameter.}

\item{y}{measured y-values (e.g. root tensile strength)}

\item{weights}{vector with weighting for each observation (default: 1)}

\item{method}{solving method. Can be \code{newton} for gradient-descent (using
\code{rootSolve::multiroot()}), \code{bisection} for a bisection algorithm
(using \code{stats::uniroot()}) or \code{chull} for a method involving convex
hulls (using, \code{grDevices::chull()}, only available for
\code{model == "uniform"})). Not all methods are available for each model,
see individual documentation for fitting functions for each model}

\item{range}{initial search range around best guess, when using a
bisection algorithm (\verb{method == "bisection}). \code{range} is added to the
best guess to provide the bounds of the initial search window}

\item{scale_min}{minimum value for the scale parameters during making an
initial guess. Value is needed to ensure algorithm doesn't crash}
}
\value{
estimate for power-law exponent and Gumbel scale parameter at x = 1
}
\description{
Generate an initial guess for power-law exponent and Gumbel scale parameter
at x = 1, to be used in function `powerlaw_gumbel_fit()`.

The power-law exponent is estimated using linear regression on
log-transformed x and y data. The Gumbel shape parameter is subsequently
estimated from Gumbel fitting of the scaled data (y/x^beta)
}
